public class Marks
{
    private int math[];
    private int science[];
    private int english[];
    private int language[];
    private int social[];

    public int[] getMath()
    {
        return math;
    }
    public void setMath(int[] math)
    {
        this.math=math;
    }

    public int[] getScience()
    {
        return science;
    }
    public void setScience(int[] science)
    {
        this.science=science;
    }

    public int[] getEnglish()
    {
        return english;
    }
    public void setEnglish(int[] english)
    {
        this.english=english;
    }

    public int[] getLanguage()
    {
        return language;
    }
    public void setLanguage(int[] language)
    {
        this.language=language;
    }

    public int[] getSocial()
    {
        return social;
    }
    public void setSocial(int[] social)
    {
        this.social=social;
    }
    
    public Marks(int math[], int science[], int english[], int language[], int social[])
    {
        this.math=math;
        this.science=science;
        this.english=english;
        this.language=language;
        this.social=social;
    }
     // This function takes as input the marks of all subjects and returns a total marks of each of the students
    public int[] calculateTotalMarks(int [] math,int science[], int[] english, int[] language,int[] social)
    {
        int totalMarks[] = new int[math.length];
        for(int i=0; i<math.length;i++)
        {
            totalMarks[i] += (math[i] + science[i] + english[i] + language[i] + social[i]);
        }
        
        return totalMarks;
    }
    // This function takes as input the total marks of each student and return
    // the average total marks of each student
    public int[] calculateAverageTotalMarks(int[] totalMarks)
    {
        int averageTotalMarks[] = new int[totalMarks.length];
        for(int i=0; i<totalMarks.length;i++)
        {
            averageTotalMarks[i]= totalMarks[i]/5;
        }       

        return averageTotalMarks;
    }
    // This function takes as input the math marks and returns the average score by all students
    public int calculateAverageMathMarks (int[] math)
    {
        int total_math_marks =0;
        int average_math_marks =0;
        for(int i=0; i<math.length; i++)
        {
            total_math_marks+= math[i];
            average_math_marks = total_math_marks/math.length;
        }
       return average_math_marks;
    }
    // This function takes as input the science marks and returns the average score by all students
    public int calculateAverageScienceMarks (int[] science)
    {
        int total_science_marks =0;
        int average_science_marks =0;
        for(int i=0; i<science.length; i++)
        {
            total_science_marks+= science[i];
            average_science_marks = total_science_marks/science.length;
        }
       return average_science_marks;
        
    }
    // This function takes as input the social marks and returns the average score by all students
    public int calculateAverageSocialMarks (int[] social)
    {
        int total_social_marks =0;
        int average_social_marks =0;
        for(int i=0; i<social.length; i++)
        {
            total_social_marks+= social[i];
            average_social_marks = total_social_marks/social.length;
        }
       return average_social_marks;
    }
    // This function takes as input the language marks and returns the average score by all students
    public int calculateAverageLanguageMarks (int[] language)
    {
        int total_language_marks =0;
        int average_language_marks =0;
        for(int i=0; i<language.length; i++)
        {
            total_language_marks+= language[i];
            average_language_marks = total_language_marks/language.length;
        }
       return average_language_marks;
    }
    // This function takes as input the english marks and returns the average score by all students
    public int calculateAverageEnglishMarks (int[] english)
    {
       int total_english_marks =0;
        int average_english_marks =0;
        for(int i=0; i<english.length; i++)
        {
            total_english_marks+= english[i];
            average_english_marks = total_english_marks/english.length;
        }
       return average_english_marks;
    }
}





import java.util.*;
public class Reports
{
    private int totalMarks[];
    private String studentNames[];

    public int[] getTotalMarks()
    {
        return totalMarks;
    }
    public void setTotalMarks(int[] totalMarks)
    {
        this.totalMarks=totalMarks;
    }

    public String[] getStudentNames()
    {
        return studentNames;
    }
    public void setStudentsNames(String[] studentNames)
    {
        this.studentNames=studentNames;
    }

    public Reports(String studentNames[], int totalMarks[])
    {
        this.totalMarks=totalMarks;
        this.studentNames=studentNames;
    }

    // This function takes as input the total marks of each student and the student names
    // and returns the name os the top scorer
    public String findTopScorer(String [] studentNames, int[] totalMarks)
    {
        //return the name of  the top scorer , extract the name from the studentNames array
        String tempTopScorer = studentNames[0];
        int tempTopScorer_marks= totalMarks[0];
        for(int i=1;i<totalMarks.length;i++)
        {
                if(totalMarks[i]>tempTopScorer_marks)
                {
                    tempTopScorer_marks = totalMarks[i];
                    tempTopScorer = studentNames[i];
                }
            
        }
        return tempTopScorer;
    }
    // This function takes as input all the marks in subjects and returns
    // as an array of 1 and 0 the passed and failed student status
    // 1 - pass
    // 0 - fail
    public int[] isPassed(int [] math,int science[], int[] social, int[] language,int[] english)
    {
        int pass_or_fail[] = new int[math.length];
        for(int i=0;i<math.length;i++)
        {
            if(math[i]<35 || science[i]<35 || social[i]<35 || language[i]<35 || english[i]<35)
            {
                pass_or_fail[i]=0;
            }
            else
            {
                pass_or_fail[i]=1;
            }
        }
        return pass_or_fail;
    }
    // This function takes as input the pass fail status array and student names
    // and returns the names of failed students who need to re appear for the exam
    public String[] listOfStudentsToReAppearForExam(int [] passFailStatus,String studentNames[])
    {
       String failed[] = new String[studentNames.length];
        int index =0;
        for(int i=0; i<passFailStatus.length;i++)
        {
            if(passFailStatus[i]==0)
            {
                failed[index]=studentNames[i];
                index++;
            }
        }
        String studentFailedExam[]=Arrays.copyOf(failed,index);
        return studentFailedExam;
    }
    // This function takes as input the pass fail status array and student names
    // and returns the names of passed students

    public String[] listOfStudentsPassedTheExam(int [] studentIndex,String studentNames[])
    {
        String passed[] = new String[studentNames.length];
        int index =0;
        for(int i=0; i<studentIndex.length;i++)
        {
            if(studentIndex[i]==1)
            {
                passed[index]=studentNames[i];
                index++;
            }
        }
        String studentPassedExam[]=Arrays.copyOf(passed,index);
        return studentPassedExam;
    }
}





public class Survey
{
    private int averageTotalMarks[];
    private int totalMarks[];
    private int rollNos[];

    public int[] getAverageTotalMarks()
    {
        return averageTotalMarks;
    }
    public void setAverageTotalMarks(int[] averageTotalMarks)
    {
        this.averageTotalMarks=averageTotalMarks;
    }

    public int[] getTotalMarks()
    {
        return totalMarks;
    }
    public void setTotalMarks(int[] totalMarks)
    {
        this.totalMarks=totalMarks;
    }

    public int[] getRollNos()
    {
        return rollNos;
    }
    public void setRollNos(int[] math)
    {
        this.rollNos=rollNos;
    }

    public Survey(int averageTotalMarks[], int totalMarks[], int rollNo[])
    {
        this.averageTotalMarks=averageTotalMarks;
        this.totalMarks=totalMarks;
        this.rollNos=rollNos;
    }

     public char[] generateGrades(int [] averageTotalMarks)
    {
        char grade[] = new char[averageTotalMarks.length];
        for(int i=0; i<averageTotalMarks.length;i++)
        {
        if(averageTotalMarks[i]>=90)
        {
            grade[i] = 'A';
        }
        else if(averageTotalMarks[i]>=80)
        {
            grade[i] = 'B';
        }
        else if(averageTotalMarks[i]>=70)
        {
            grade[i] = 'C';
        }
        else if(averageTotalMarks[i]>=60)
        {
            grade[i] = 'D';
        }
        else if(averageTotalMarks[i]>=50)
        {
            grade[i] = 'E';
        }
        else
        {
           grade[i]= 'F'; 
        }
        
        }
        return grade;
    }

    //This function takes the total marks of students and roll numbers abd returns the roll nos
    // in sorted order of total marks from smallest score to highest score

    public int[] sortByTotalMarks(int[] totalMarks,int [] rollNos)
    {
        for(int i=0; i<rollNos.length; i++)
        {
            for(int j=0;j<rollNos.length-i-1;j++)
            {
                if(totalMarks[j]>totalMarks[j+1])
                {
                    int tempTotalMarks = totalMarks[j];
                    totalMarks[j] = totalMarks[j+1];
                    totalMarks[j+1] = tempTotalMarks;

                    int temprollNos = rollNos[j];
                    rollNos[j] = rollNos[j+1];
                    rollNos[j+1] = temprollNos;
                }
            }
        }
        return rollNos;
    }

}





public class StudentMain
{
    public static void main(String[] args) 
    {
        String[] studentNames = {"Abe", "Gary", "Chloe", "Dave", "Fara", "Harry", "Ira", "Jack", "Jim", "Joel", "Kevin", "Larry", "Levin", "Malcolm", "Navya", "Nathan", "Noel", "Oliver", "Pamela", "Randall"};
        int[] rollNos = {101, 104, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120};
        int[] math = {95, 30, 55, 67, 88, 90, 45, 100, 95, 89, 66, 55, 35, 90, 22, 12, 67, 80, 75, 80};
        int[] science = {95, 30, 55, 67, 83, 90, 54, 100, 95, 89, 66, 55, 35, 90, 22, 19, 67, 80, 75, 80};
        int[] english = {98, 45, 65, 67, 87, 96, 45, 98, 95, 89, 66, 55, 35, 90, 34, 18, 68, 81, 76, 81};
        int[] language = {95, 55, 76, 68, 89, 90, 44, 99, 95, 89, 66, 55, 35, 90, 44, 10, 69, 82, 77, 82};
        int[] social = {95, 88, 44, 70, 81, 93, 36, 99, 95, 89, 66, 55, 35, 90, 23, 20, 70, 83, 78, 80};
        
        Marks marks = new Marks(math, science, english, language, social);
        marks.setMath(math);
        marks.setScience(science);
        marks.setEnglish(english);
        marks.setLanguage(language);
        marks.setSocial(social);
        int totalMarks[] = marks.calculateTotalMarks(math, science, english, language, social);

        System.out.println("Total Marks of each student");
        marks.calculateTotalMarks(math, science, english, language, social);
        for(int i=0;i<totalMarks.length;i++)
        {
            System.out.print(totalMarks[i]+" ");
        }
        System.out.println(" ");
             
        int[] averageTotalMarks = marks.calculateAverageTotalMarks(totalMarks);
        System.out.println("Average Total Marks");
        for(int i=0;i<averageTotalMarks.length;i++)
        {
            System.out.print(averageTotalMarks[i]+" ");
        }
        System.out.println(" ");
        
        System.out.println("Total marks of maths="+marks.calculateAverageMathMarks (math));
        System.out.println("Total marks of science="+marks.calculateAverageScienceMarks (science));
        System.out.println("Total marks of social="+marks.calculateAverageSocialMarks (social));
        System.out.println("Total marks of language="+marks.calculateAverageLanguageMarks (language));
        System.out.println("Total marks of english="+marks.calculateAverageEnglishMarks (english));

        Reports reports = new Reports(studentNames, totalMarks);
        reports.setStudentsNames(studentNames);
        reports.setTotalMarks(totalMarks);

        System.out.println("Top Scorer =" +reports.findTopScorer(studentNames, totalMarks));
        int[] passFailStatus = reports.isPassed(math, science, social, language, english);
        reports.listOfStudentsToReAppearForExam(passFailStatus, studentNames);
        reports.listOfStudentsPassedTheExam(passFailStatus, studentNames);

        Survey survey = new Survey(averageTotalMarks, totalMarks, rollNos);
        survey.setAverageTotalMarks(averageTotalMarks);
        survey.setTotalMarks(totalMarks);
        survey.setRollNos(rollNos);
        
        char[] grade = survey.generateGrades(averageTotalMarks);
        System.out.println("Grades of each student");
        
        for(int i=0;i<grade.length;i++)
        {
            System.out.print(studentNames[i]+":"+grade[i]+"\n");
        }
        System.out.println(" ");
        
        System.out.println("Roll No according to marks");
        survey.sortByTotalMarks(totalMarks, rollNos);
        for(int i=0;i<rollNos.length;i++){
            System.out.print(rollNos[i]+" ");
        }
        




    }
}